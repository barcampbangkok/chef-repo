# Data bag for the 'application' cookbook -- see that cookbook's docs for info,
# including additional options that may be removed here due to not being
# relevant to our adaptations.

id: barcampbkk

# This defines which roles can be applied to a node in order for the
# application cookbook to further act on it
server_roles: [ app ]

# Each key in 'type' is looked up for a matching role name, and then the
# value sets which application sub-recipes will be applied to nodes with
# the role. This is generalized to support deploying many apps in an
# infrastructure, where more descriptive role names than 'app' would
# typically be given for each one, hence the redundant naming in our case.
type:
  app: [ django, gunicorn ]

# A more specific role than this should of course be created for a multi-
# node, master/slave architecture. Kind of silly that this value needs to be
# an array, but it does...
#
# This is largely intended for use with the Opscode 'database' cookbook,
# which doesn't yet support Postgres...
database_master_role: [ postgresql-server ]
# database_slave_role: [ my_app_database_slave ]

# Use an encrypted data bag for credentials
databases:
  production:
    database: barcampbkk_production
    adapter: postgresql_psycopg2
    port: 5432
    encoding: utf8
    username: test
    password: test

# Deployment Setup
#
# The application cookbook sets up for Chef's deployment provider out of the
# box. We won't use it, because it's an odd way to deploy apps really, but
# we'll go ahead and let it set up the Capistrano-style deployment
# directories and we'll deploy to them with Fabric.
repository: git://github.com/barcampbangkok/barcampbkk.git
deploy_to: /srv/barcampbkk
owner: barcamp
group: barcamp

# Set the below if you want Chef to manage deployments
# Unneeded since the repo is public
# deploy_key: 'SSH private key used to deploy from a private git repository'

revision: { production: deployment }
force: { production: false }
migrate: { production: false }

# System packages (i.e. non-pip) the app requires. Key is the Ubuntu package
# name, value is a version specification (set false to use default).
packages:
  # Python Imaging Library requirements:
  libfreetype6-dev: false
  libjpeg-dev: false
  zlib1g-dev: false

# You can specify python packages to install with pip, but you shouldn't --
# use requirements/production.txt for this and they'll be installed on deploy.
pips: {}

local_settings_file: settings/production.py

